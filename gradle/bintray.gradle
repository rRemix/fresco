// Upload to Bintray
apply plugin: 'com.jfrog.bintray'

def getBintrayUsername() {
    return properties.get('bintrayUsername', "rRemix")
}

def getBintrayApiKey() {
    return properties.get('bintrayApiKey', "22023ffcfad889ae487049a95f7c50fb522dfcef")
}

def getBintrayGpgPassword() {
    return properties.get('bintrayGpgPassword', System.getenv('BINTRAY_GPG_PASSWORD'))
}

def getMavenCentralUsername() {
    return properties.get('mavenCentralUsername',"rRemix")
}

def getMavenCentralPassword() {
    return properties.get('mavenCentralPassword', "xbr19921010")
}

def shouldSyncWithMavenCentral() {
    return properties.get('syncWithMavenCentral', false)
}

def dryRunOnly() {
    return properties.get('dryRun', false)
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        userOrg = bintrayUserOrg
        name = bintrayName
        desc = bintrayDescription
        websiteUrl = projectUrl
        issueTrackerUrl = issuesUrl
        vcsUrl = scmUrl
        licenses = ['MIT']
        dryRun = dryRunOnly()
        override = true
        publish = true
        publicDownloadNumbers = true
        version {
            desc = bintrayDescription
//            gpg {
//                sign = true
//                passphrase = getBintrayGpgPassword()
//            }
            mavenCentralSync {
                sync = shouldSyncWithMavenCentral()
                user = getMavenCentralUsername()
                password = getMavenCentralPassword()
                close = '1' // If set to 0, you have to manually click release
            }
        }
    }
}
